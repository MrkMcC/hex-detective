@use "theme";
@use "vars/colours";
@use "vars/dimensions";

.person-container {
  width: dimensions.$person-a-l-w;
  height: dimensions.$person-a-l-h;
  position: relative;
  margin: dimensions.$margin-person;

  &:hover,
  :hover {
    * {
      visibility: visible;
    }
  }

  .person {
    position: relative;
    width: 100%;
    height: 100%;
    &.selected {
      background-color: red;
    }

    &:not(.disabled) {
      cursor: pointer;
      &:hover {
        background-color: colours.$bg-white;
      }
    }
  }

  &.ruled-out {
    background-color: colours.$bg-black;

    .icon-overlay {
      background: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' version='1.1' preserveAspectRatio='none' viewBox='0 0 100 100'><path d='M100 0 L0 100 ' stroke='black' stroke-width='5'/><path d='M0 0 L100 100 ' stroke='black' stroke-width='5'/></svg>");
      background-repeat: no-repeat;
      background-position: center center;
      background-size: 100% 100%, auto;
      background-color: grey;
      opacity: 0.5;
      position: absolute;
      height: 99%;
      width: 99%;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      z-index: theme.$z_body_overlay;
      font-size: x-large;
      display: flex;
      justify-content: center;

      .icon {
        margin-top: 0.25em;
        padding: 0.1em;
        border: 1px solid white;
        border-radius: 20px;
      }
    }
  }

  .icon-overlay {
    display: none;
  }
}

.body {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}
